// ๐ src/components/JobApplicationModal.jsx
import React, { useState } from "react";

export default function JobApplicationModal({
  open,
  onClose,
  job,
  profileData = {},
  onSubmit,
}) {
  const [form, setForm] = useState({
    name: profileData.name || "",
    email: profileData.email || "",
    phone: profileData.phone || "",
    dob: profileData.dob || "",
    address: profileData.address || "",
    coverLetter: profileData.coverLetter || "ูุณุนุฏูู ุงูุชูุฏู ูููุธููุฉ ูุฃุนุชูุฏ ุฃู ุฎุจุฑุชู ูู ุงููุฌุงู ููุงุณุจุฉ... (ููููู ุงูุชุนุฏูู ููุง)",
    jobTitle: job?.title || "",
    jobType: job?.type || "",
    targetCompany: job?.company || "",
    currentCompany: profileData.currentCompany || "",
    linkedin: profileData.linkedin || "",
    skills: profileData.skills || [],
  });

  const [skillInput, setSkillInput] = useState("");
  const [coverGenLoading, setCoverGenLoading] = useState(false);
  const [success, setSuccess] = useState(false);

  if (!open) return null;

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm((prev) => ({ ...prev, [name]: value }));
  };

  const addSkill = () => {
    if (skillInput.trim() && !form.skills.includes(skillInput.trim())) {
      setForm((prev) => ({
        ...prev,
        skills: [...prev.skills, skillInput.trim()],
      }));
      setSkillInput("");
    }
  };

  const removeSkill = (skill) => {
    setForm((prev) => ({
      ...prev,
      skills: prev.skills.filter((s) => s !== skill),
    }));
  };

  const regenerateCover = () => {
    setCoverGenLoading(true);
    setTimeout(() => {
      setForm((prev) => ({
        ...prev,
        coverLetter: "ุชู ุชูููุฏ ุฎุทุงุจ ุฌุฏูุฏ ููุงุณุจ ูููุธููุฉ ุจุงุณุชุฎุฏุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู (ููุง ููุงู ุงูุฎุทุงุจ)..."
      }));
      setCoverGenLoading(false);
    }, 1200);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setSuccess(true);
    setTimeout(() => {
      setSuccess(false);
      onSubmit && onSubmit(form, job);
      onClose();
    }, 1500);
  };

  const handleDownloadPDF = () => {
    alert("ุณูุชู ุชูุฒูู ูุณุฎุฉ PDF ูุฑูุจุงู (ุชุญุชุงุฌ ุฏูุฌ ููุชุจุฉ real pdf)!");
  };

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40 font-[montaser]">
      <div className="bg-white rounded-2xl w-full max-w-2xl max-h-[96vh] overflow-y-auto shadow-xl p-8 relative">
        <button onClick={onClose} className="absolute left-4 top-4 text-gray-400 hover:text-blue-600 text-2xl font-bold">ร</button>

        <h2 className="text-2xl md:text-3xl font-bold text-blue-700 mb-2 text-right">ูุฑุงุฌุนุฉ ุทูุจ ุงูุชูุฏูู ูุจู ุงูุฅุฑุณุงู</h2>
        <p className="text-sm text-gray-600 mb-5 text-right">
          ุฑุงุฌุน ุจูุงูุงุชู ูููุณ ูุจู ูุง ุชุจุนุช ุทูุจู. ุชูุฏุฑ ุชุนุฏูู ุฃู ุญุงุฌุฉ ูู ุงูุจูุงูุงุช ุฃู ุงูุฎุทุงุจุ ููู ุงููู ูุชุจุนุชูู ููููู ุธุงูุฑ ูุฏุงูู ููุง. ููุง ุชุชุฃูุฏ ุฅู ูู ุญุงุฌุฉ ุตุญุ ุงุถุบุท ุนูู ุฒุฑ "ุณููู ุงูุทูุจ" ูู ุขุฎุฑ ุงูุตูุญุฉ.
        </p>

        {success ? (
          <div className="text-center my-20">
            <div className="text-3xl mb-4">โ</div>
            <div className="text-lg font-bold text-green-700 mb-2">ุชู ุชุณููู ุทูุจู ุจูุฌุงุญ!</div>
            <div className="text-sm text-gray-600">ูุชูุงูู ุญุงูุฉ ุงูุชูุฏูู ูุญุฏุซุฉ ูู ููุญุฉ ุงูุชุญูู ุจุชุงุนุชู.<br />ุจุงูุชูููู ูุง ุนุณููุฉ!</div>
          </div>
        ) : (
          <form onSubmit={handleSubmit} className="flex flex-col gap-6">
            {/* ุจูุงูุงุช ุฃุณุงุณูุฉ */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-right font-semibold mb-1">ุงูุงุณู ุจุงููุงูู</label>
                <input type="text" name="name" value={form.name} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" required />
              </div>
              <div>
                <label className="block text-right font-semibold mb-1">ุงูุจุฑูุฏ ุงูุฅููุชุฑููู</label>
                <input type="email" name="email" value={form.email} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" required />
              </div>
              <div>
                <label className="block text-right font-semibold mb-1">ุฑูู ุงูุชููููู</label>
                <input type="text" name="phone" value={form.phone} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" required />
              </div>
              <div>
                <label className="block text-right font-semibold mb-1">ุชุงุฑูุฎ ุงููููุงุฏ (ุงุฎุชูุงุฑู)</label>
                <input type="date" name="dob" value={form.dob} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" />
              </div>
              <div className="md:col-span-2">
                <label className="block text-right font-semibold mb-1">ุงูุนููุงู ุงูุญุงูู</label>
                <input type="text" name="address" value={form.address} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" required />
              </div>
            </div>

            {/* ููุฎุต ุงูุชูุฏูู */}
            <div>
              <label className="block text-right font-semibold mb-1">ููุฎุต ุงูุชูุฏูู (Cover Letter)</label>
              <textarea name="coverLetter" rows={5} value={form.coverLetter} onChange={handleChange}
                className="border rounded-xl p-2 w-full text-right" />
              <div className="flex gap-3 mt-2">
                <button type="button" onClick={regenerateCover}
                  className="text-blue-600 font-bold underline" disabled={coverGenLoading}>
                  {coverGenLoading ? "ุจููููุฏ ุงูุฎุทุงุจ..." : "ูููุฏ ูู ุฌุฏูุฏ"}
                </button>
              </div>
            </div>

            {/* ุจูุงูุงุช ุฅุถุงููุฉ */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-right font-semibold mb-1">ุงููุณูู ุงููุธููู ุงููุชูุฏูู ูู</label>
                <input type="text" name="jobTitle" value={form.jobTitle} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" readOnly />
              </div>
              <div>
                <label className="block text-right font-semibold mb-1">ููุน ุงููุธููุฉ</label>
                <input type="text" name="jobType" value={form.jobType} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" readOnly />
              </div>
              <div>
                <label className="block text-right font-semibold mb-1">ุงุณู ุงูุดุฑูุฉ/ุงูุฌูุฉ ุงููุชูุฏูู ููุง</label>
                <input type="text" name="targetCompany" value={form.targetCompany} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" readOnly />
              </div>
              <div>
                <label className="block text-right font-semibold mb-1">ุงุณู ุงูุดุฑูุฉ ุงูุญุงููุฉ (ูู ููุฌูุฏ)</label>
                <input type="text" name="currentCompany" value={form.currentCompany} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" />
              </div>
              <div className="md:col-span-2">
                <label className="block text-right font-semibold mb-1">ุฑุงุจุท ููููุฏุฅู (ุงุฎุชูุงุฑู)</label>
                <input type="text" name="linkedin" value={form.linkedin} onChange={handleChange}
                  className="border rounded-xl p-2 w-full text-right" />
              </div>
            </div>

            {/* ุงูููุงุฑุงุช ุงูุฑุฆูุณูุฉ */}
            <div>
              <label className="block text-right font-semibold mb-1">ุงูููุงุฑุงุช ุงูุฑุฆูุณูุฉ (Skills)</label>
              <div className="flex flex-wrap gap-2 mb-2">
                {form.skills.map((skill, idx) => (
                  <span key={idx} className="bg-blue-100 text-blue-700 px-3 py-1 rounded-full text-sm flex items-center gap-1">
                    {skill}
                    <button type="button" onClick={() => removeSkill(skill)} className="ml-1 text-red-500 text-lg">ร</button>
                  </span>
                ))}
              </div>
              <div className="flex gap-2">
                <input type="text" value={skillInput} onChange={(e) => setSkillInput(e.target.value)}
                  onKeyDown={(e) => e.key === "Enter" && (e.preventDefault(), addSkill())}
                  className="border rounded-xl p-2 w-full text-right"
                  placeholder="ุฃุถู ููุงุฑุฉ ุฌุฏูุฏุฉ..." />
                <button type="button" className="bg-blue-600 text-white rounded-xl px-4 py-2 hover:bg-blue-700" onClick={addSkill}>ุฃุถู</button>
              </div>
            </div>

            {/* ููุฎุต ุฌุงูุจู + ุชุญููู PDF */}
            <div className="bg-blue-50 rounded-xl p-4 my-3 text-right">
              <h4 className="font-bold text-blue-700 mb-2">ููุฎุต ุงูุทูุจ</h4>
              <ul className="text-sm text-blue-900 mb-2">
                <li><strong>ุงููุธููุฉ:</strong> {form.jobTitle}</li>
                <li><strong>ุงูุดุฑูุฉ:</strong> {form.targetCompany}</li>
                <li><strong>ููุน ุงููุธููุฉ:</strong> {form.jobType}</li>
                <li><strong>ุงุณูู:</strong> {form.name}</li>
                <li><strong>ุงูุฅูููู:</strong> {form.email}</li>
              </ul>
              <button type="button" className="text-blue-700 underline text-sm" onClick={handleDownloadPDF}>ุชูุฒูู ูุณุฎุฉ PDF</button>
            </div>

            {/* ุฒุฑ ุงูุชุณููู + ุฒุฑ ุงูุฅูุบุงุก */}
            <div className="flex flex-col gap-3">
              <button type="submit" className="bg-blue-700 text-white font-bold py-3 rounded-xl text-lg hover:bg-blue-800 w-full">
                ุณููู ุงูุทูุจ ุฏูููุชู
              </button>
              <button
                type="button"
                onClick={onClose}
                className="bg-gray-200 text-gray-700 font-bold py-3 rounded-xl text-lg hover:bg-gray-300 w-full"
              >
                ุฅูุบุงุก
              </button>
            </div>

            <div className="text-xs text-gray-500 text-center mt-2">
              ุจุงูุถุบุท ุนูู ุงูุฒุฑุงุฑุ ููุจุนุช ุจูุงูุงุชู ูุฎุทุงุจ ุงูุชูุฏูู ูุจุงุดุฑุฉ ููุฌูุฉ ุงููุฎุชุงุฑุฉ.
            </div>
          </form>
        )}
      </div>
    </div>
  );
}
